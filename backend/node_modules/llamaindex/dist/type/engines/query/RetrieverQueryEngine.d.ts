import { BaseQueryEngine, type QueryType } from "@llamaindex/core/query-engine";
import type { BaseSynthesizer } from "@llamaindex/core/response-synthesizers";
import { BaseRetriever } from "@llamaindex/core/retriever";
import { type NodeWithScore } from "@llamaindex/core/schema";
import type { BaseNodePostprocessor } from "../../postprocessors/index.js";
/**
 * A query engine that uses a retriever to query an index and then synthesizes the response.
 */
export declare class RetrieverQueryEngine extends BaseQueryEngine {
    retriever: BaseRetriever;
    responseSynthesizer: BaseSynthesizer;
    nodePostprocessors: BaseNodePostprocessor[];
    constructor(retriever: BaseRetriever, responseSynthesizer?: BaseSynthesizer, nodePostprocessors?: BaseNodePostprocessor[]);
    protected _getPrompts(): {};
    protected _updatePrompts(): void;
    _getPromptModules(): {
        responseSynthesizer: BaseSynthesizer;
    };
    private applyNodePostprocessors;
    retrieve(query: QueryType): Promise<NodeWithScore<import("@llamaindex/core/schema").Metadata>[]>;
}
