import { MessageContent } from '../../llms/dist/index.cjs';
import { PromptMixin } from '../../prompts/dist/index.cjs';
import { NodeWithScore, EngineResponse } from '../../schema/dist/index.cjs';

/**
 * @link https://docs.llamaindex.ai/en/stable/api_reference/schema/?h=querybundle#llama_index.core.schema.QueryBundle
 *
 *  We don't have `image_path` here, because it is included in the `query` field.
 */
type QueryBundle = {
    query: MessageContent;
    customEmbeddings?: string[];
    embeddings?: number[];
};
type QueryType = string | QueryBundle;
type BaseQueryParams = {
    query: QueryType;
};
interface StreamingQueryParams extends BaseQueryParams {
    stream: true;
}
interface NonStreamingQueryParams extends BaseQueryParams {
    stream?: false;
}
type QueryFn = (strOrQueryBundle: QueryType, stream?: boolean) => Promise<AsyncIterable<EngineResponse> | EngineResponse>;
declare abstract class BaseQueryEngine extends PromptMixin {
    protected readonly _query: QueryFn;
    protected constructor(_query: QueryFn);
    retrieve(params: QueryType): Promise<NodeWithScore[]>;
    query(params: StreamingQueryParams): Promise<AsyncIterable<EngineResponse>>;
    query(params: NonStreamingQueryParams): Promise<EngineResponse>;
}

type QueryStartEvent = {
    id: string;
    query: QueryType;
};
type QueryEndEvent = {
    id: string;
    response: EngineResponse | AsyncIterable<EngineResponse>;
};

export { BaseQueryEngine, type QueryBundle, type QueryEndEvent, type QueryStartEvent, type QueryType };
